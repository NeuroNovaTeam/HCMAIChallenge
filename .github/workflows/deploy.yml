name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      
    - name: Cache yarn dependencies
      uses: actions/cache@v4
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Cache Vite build cache
      uses: actions/cache@v4
      with:
        path: |
          .vite
          node_modules/.vite
        key: ${{ runner.os }}-vite-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-vite-
          
    - name: Cache TypeScript cache
      uses: actions/cache@v4
      with:
        path: |
          .tsbuildinfo
          node_modules/.cache/typescript
        key: ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig.json', '**/src/**/*.ts', '**/src/**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-tsc-
          
    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --prefer-offline
      
    - name: Install dependencies (cached)
      if: steps.yarn-cache.outputs.cache-hit == 'true'
      run: yarn install --frozen-lockfile --prefer-offline
      
    - name: Build
      run: yarn build:prod
      env:
        NODE_ENV: production
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 